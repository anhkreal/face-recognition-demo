from fastapi import APIRouter, Query
from fastapi.responses import JSONResponse
from service.embedding_query_service import search_embeddings_api

embedding_search_router = APIRouter()

@embedding_search_router.get(
    '/search_embeddings',
    summary="T√¨m ki·∫øm embedding khu√¥n m·∫∑t",
    description="""
    **T√¨m ki·∫øm th√¥ng tin embedding khu√¥n m·∫∑t trong c∆° s·ªü d·ªØ li·ªáu**
    
    API n√†y cho ph√©p:
    - T√¨m ki·∫øm embedding theo image_id, image_path, ho·∫∑c class_id
    - Xem chi ti·∫øt th√¥ng tin l∆∞u tr·ªØ c·ªßa t·ª´ng ·∫£nh
    - Ki·ªÉm tra tr·∫°ng th√°i d·ªØ li·ªáu trong h·ªá th·ªëng
    - H·ªó tr·ª£ ph√¢n trang ƒë·ªÉ d·ªÖ qu·∫£n l√Ω
    
    **C√°ch s·ª≠ d·ª•ng:**
    - query: T·ª´ kh√≥a t√¨m ki·∫øm (c√≥ th·ªÉ l√† image_id, ƒë∆∞·ªùng d·∫´n ·∫£nh, ho·∫∑c class_id)
    - page: S·ªë trang hi·ªán t·∫°i
    - page_size: S·ªë l∆∞·ª£ng k·∫øt qu·∫£ m·ªói trang
    
    **K·∫øt qu·∫£ tr·∫£ v·ªÅ:**
    - Danh s√°ch embedding ph√π h·ª£p
    - Chi ti·∫øt image_id, image_path, class_id
    - Th√¥ng tin ph√¢n trang
    - T·ªïng s·ªë k·∫øt qu·∫£ t√¨m ƒë∆∞·ª£c
    
    **·ª®ng d·ª•ng:**
    - Ki·ªÉm tra d·ªØ li·ªáu ƒë√£ l∆∞u
    - Debug h·ªá th·ªëng
    - Qu·∫£n l√Ω c∆° s·ªü d·ªØ li·ªáu
    """,
    response_description="Danh s√°ch embedding khu√¥n m·∫∑t v·ªõi ph√¢n trang",
    tags=["üìä T√¨m Ki·∫øm & Th·ªëng K√™"]
)
def search_embeddings_api_route(
    query: str = Query('', description='T·ª´ kh√≥a t√¨m ki·∫øm (image_id, image_path, class_id) - ƒë·ªÉ tr·ªëng ƒë·ªÉ hi·ªÉn th·ªã t·∫•t c·∫£'),
    page: int = Query(1, ge=1, description='S·ªë trang hi·ªán t·∫°i (b·∫Øt ƒë·∫ßu t·ª´ 1)'),
    page_size: int = Query(15, ge=1, le=15, description='S·ªë l∆∞·ª£ng k·∫øt qu·∫£ m·ªói trang (t·ªëi ƒëa 15)'),
    sort_by: str = Query('image_id_asc', description='S·∫Øp x·∫øp theo: image_id_asc, image_id_desc, class_id_asc, class_id_desc, image_path_asc, image_path_desc, created_asc, created_desc, updated_asc, updated_desc')
):
    result = search_embeddings_api(query, page, page_size, sort_by)
    # Convert numpy types to native Python types for JSON serialization
    import numpy as np
    def convert(obj):
        if isinstance(obj, np.integer):
            return int(obj)
        if isinstance(obj, np.floating):
            return float(obj)
        if isinstance(obj, np.ndarray):
            return obj.tolist()
        if isinstance(obj, dict):
            return {k: convert(v) for k, v in obj.items()}
        if isinstance(obj, list):
            return [convert(v) for v in obj]
        return obj
    result = convert(result)
    return JSONResponse(content=result)
