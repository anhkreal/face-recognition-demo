from fastapi import APIRouter
from fastapi.responses import JSONResponse
from service.vector_info_service import get_vector_info_service


vector_info_router = APIRouter()

@vector_info_router.get(
    '/vector_info',
    summary="Th√¥ng tin chi ti·∫øt v·ªÅ vectors",
    description="""
    **Xem th√¥ng tin chi ti·∫øt v·ªÅ t·∫•t c·∫£ vectors trong h·ªá th·ªëng**
    
    API n√†y cung c·∫•p:
    - Danh s√°ch t·∫•t c·∫£ vectors ƒë√£ ƒë∆∞·ª£c l∆∞u tr·ªØ
    - Mapping gi·ªØa image_id v√† vector position trong FAISS
    - Th√¥ng tin metadata c·ªßa t·ª´ng vector
    - Statistics v·ªÅ ph√¢n b·ªë vectors
    - Tr·∫°ng th√°i ƒë·ªìng b·ªô gi·ªØa database v√† FAISS index
    
    **Th√¥ng tin chi ti·∫øt bao g·ªìm:**
    - vector_count: T·ªïng s·ªë vectors
    - image_id_mapping: Map gi·ªØa image_id v√† index position
    - metadata_info: Th√¥ng tin class_id, image_path cho t·ª´ng vector
    - consistency_check: Ki·ªÉm tra t√≠nh nh·∫•t qu√°n d·ªØ li·ªáu
    - storage_info: Th√¥ng tin l∆∞u tr·ªØ v√† b·ªô nh·ªõ
    
    **·ª®ng d·ª•ng:**
    - Debug mapping issues
    - Ki·ªÉm tra data consistency
    - Database maintenance
    - Performance analysis
    - Troubleshooting search problems
    
    **L∆∞u √Ω:**
    - API n√†y c√≥ th·ªÉ tr·∫£ v·ªÅ nhi·ªÅu d·ªØ li·ªáu n·∫øu h·ªá th·ªëng c√≥ nhi·ªÅu vectors
    - S·ª≠ d·ª•ng c·∫©n th·∫≠n v·ªõi database l·ªõn
    """,
    response_description="Th√¥ng tin chi ti·∫øt v·ªÅ t·∫•t c·∫£ vectors trong h·ªá th·ªëng",
    tags=["üìä T√¨m Ki·∫øm & Th·ªëng K√™"]
)
def get_vector_info():
    result = get_vector_info_service()
    status_code = result.get("status_code", 200)
    # X√≥a status_code kh·ªèi dict n·∫øu c√≥
    if "status_code" in result:
        result = {k: v for k, v in result.items() if k != "status_code"}
    return JSONResponse(content=result, status_code=status_code)
    
